#[include shell_command.cfg]
[include mainsail.cfg]
[include macros.cfg]
[include stepper.cfg]
[include EBB36.cfg]
#[include klicky-probe.cfg]
#[include speed_test.cfg]
[include print_macros.cfg]
[include xol_leds.cfg]
#[include z_calibration.cfg]
[include eddy-ng.cfg]
#[include shell_command.cfg]
#[include filament_sensor.cfg]

[mcu]
canbus_uuid:36cbaee86293

[mcu EBBCan]
canbus_uuid: d5350ab8ba92

##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 1000
max_accel: 20000       
max_z_velocity: 20
max_z_accel: 350
square_corner_velocity: 7.0

# [homing_override]
# gcode:
#   # Move 5 up, just in case (this is our safety zhop, this needs 'set_position_z: 0' below)
#   G91 ; set relative positioning
#   G0 Z25 F1000 ; 5 up zhop
#   {% if not rawparams or 'Y' in rawparams %}
#     {action_respond_info('Homing Y')}
#     G28 Y
#     G90 ; set absolute positioning
#     G0 Y125 F6000 ; return to center
#     M400 ; Wait for move to finish
#   {% endif %}
#   {% if not rawparams or 'X' in rawparams %}
#     {action_respond_info('Homing X')}
#     G28 X
#     G90 ; set absolute positioning
#     G0 X125 F6000 ; return to center
#     M400 ; Wait for move to finish
#   {% endif %}
#   {% if not rawparams or 'Z' in rawparams %}
#     {action_respond_info('Homing Z')}
#     G90 ; set absolute positioning
#     G0 X125 Y125 F6000 ; return to center, please add your offsets manually if you want to
#     # G28 Z
#     # G91 ; set relative positioning
#     # G0 Z5 F1000 ; 5mm up
#     # M400 ; Wait for move to finish
#   {% endif %}
#   G90 ; set absolute positioning
# axes: xy
# set_position_z: 0 # This forces the z position to be at 0 when we start homing, so we can move the Z up before homing.




[extruder]

[exclude_object]

[resonance_tester]
accel_chip: adxl345
probe_points:
   125, 125, 20 

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes

# [safe_z_home]
# ##  XY Location of the Z Endstop Switch
# ##  Update -10,-10 to the XY coordinates of your endstop pin 
# ##  (such as 157,305) after going through Z Endstop Pin
# ##  Location Definition step.
# home_xy_position:145,250
# speed:10
# z_hop:10




#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HEATBED
##  Thermistor - TH1
heater_pin: PG11
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA1
pullup_resistor: 2200
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 1
min_temp: 0
max_temp: 130
control: pid
pid_kp: 58.437
pid_ki: 2.347
pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

# [probe]
# ##  Inductive Probe
# ##  Connected to Z-PROBE
# ##  This probe is not used for Z height, only Quad Gantry Leveling
# pin: EBBCan:PB3
# x_offset: 0
# y_offset: 25.0
# #z_offset: 0
# speed: 10.0
# samples: 3
# samples_result: median
# sample_retract_dist: 3.0
# samples_tolerance: 0.006
# samples_tolerance_retries: 3

#####################################################################
#   Fan Control
#####################################################################

[fan_generic Abluft]
#  Exhaust fan - FAN3
#pin: PE5 
pin: PG10
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.3
off_below: 0.02
cycle_time: 0.0005

[fan_generic Umluft]
pin: PB3
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5
off_below: 0.05



# [controller_fan controller_fan]
# ##  Controller fan - FAN2
# pin: PF7
# ##tachometer_pin: PF6
# kick_start_time: 0.5
# heater: heater_bed


[output_pin caselight]
pin: PE6
value: 0.5 #startup value
shutdown_value: 0
pwm: True
cycle_time: 0.01


[idle_timeout]
timeout: 1800


[z_tilt]
z_positions:
    -50, 18
    125, 298
    300, 18
points:
    30, 5
    125, 195
    220, 5
speed: 200
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.0075

[bed_mesh]
horizontal_move_z: 2
speed: 100
mesh_min: 40, 40
mesh_max: 220,220
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
zero_reference_position: 150, 150
fade_start: 1
fade_end: 5
fade_target: 0

[temperature_sensor Bauraum]
sensor_type: Generic 3950
sensor_pin: PA2
pullup_resistor: 2200


[temperature_sensor Buildplate]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA3
pullup_resistor: 2200



[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.016660, 0.036465, 0.028965, 0.015840, -0.032910
#*# 	-0.012285, 0.012090, 0.009590, -0.011660, -0.015410
#*# 	-0.033535, 0.000840, -0.013535, 0.010840, -0.017285
#*# 	-0.022910, 0.001465, 0.014590, -0.013535, -0.020410
#*# 	-0.029785, -0.008535, -0.011660, -0.036035, -0.069160
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 220.0
#*# min_y = 40.0
#*# max_y = 220.0
#*#
#*# [probe]
#*# z_offset = 6.280
#*#
#*# [bed_mesh ABS]
#*# version = 1
#*# points =
#*# 	0.016606, 0.019106, 0.029106, 0.038481, -0.026519
#*# 	-0.012144, 0.012856, 0.013481, -0.006519, -0.031519
#*# 	0.015356, 0.021606, 0.009731, -0.016519, -0.026519
#*# 	-0.008394, 0.009106, 0.015981, -0.019019, -0.049644
#*# 	-0.020269, 0.038481, -0.007769, -0.012769, -0.050894
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 220.0
#*# min_y = 40.0
#*# max_y = 220.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 77.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 52.4
#*#
#*# [bed_mesh ASA]
#*# version = 1
#*# points =
#*# 	-0.018451, 0.032174, 0.037799, 0.008424, -0.037826
#*# 	-0.018451, -0.004701, 0.019049, -0.000951, -0.016576
#*# 	-0.022826, -0.008451, 0.006549, -0.009701, -0.009076
#*# 	-0.030326, 0.000924, 0.002174, -0.002826, -0.011576
#*# 	-0.042826, 0.022799, -0.004076, -0.014701, -0.055951
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 220.0
#*# min_y = 40.0
#*# max_y = 220.0
#*#
#*# [probe_eddy_ng btt_eddy]
#*# calibration_16 = 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
#*# calibrated_drive_currents = 16
#*# calibration_version = 3
#*# saved_reg_drive_current = 16
#*# saved_tap_drive_current = 16
#*# tap_adjust_z = 0.060
