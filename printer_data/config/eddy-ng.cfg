[mcu eddy]
canbus_uuid: 9bce44e7c458
#restart_method: command

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

# [temperature_sensor btt_eddy]
# sensor_type: Generic 3950
# sensor_pin: eddy:gpio26

# For all Eddy (USB/Duo/Coil)
[probe_eddy_ng btt_eddy]
sensor_type: ldc1612
# Eddy USB/Duo values below. For Eddy Coil, replace these two with mcu/bus for your setup.
i2c_mcu: eddy
i2c_bus: i2c0f
samples_per_second: 500 # 250 by default
x_offset: 0 #-16
y_offset: 21.5
tap_target_z: -0.350 #-0.350
tap_mode: butter
#tap_adjust_z: 0.145 #0.080 #0.080
tap_threshold: 250
tap_butter_order: 2
tap_butter_lowcut: 5
tap_butter_highcut: 25
tap_samples: 3
tap_max_samples: 10
tap_samples_stddev: 0.010








# THIS HOMING OVERRIDE ALWAYS GOES BACK TO CENTER FIRST BEFORE HOMING THE OTHER AXIS
# THIS ALREADY INCLUDES THE EDDY HOMING OVERRIDES/CHANGES
[homing_override]
gcode:
  # Move 5 up, just in case (this is our safety zhop, this needs 'set_position_z: 0' below)
  G91 ; set relative positioning
  G0 Z5 F1000 ; 5 up zhop
  {% if not rawparams or 'Y' in rawparams %}
    {action_respond_info('Homing Y')}
    G28 Y
    G90 ; set absolute positioning
    G0 Y125 F6000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'X' in rawparams %}
    {action_respond_info('Homing X')}
    G28 X
    G90 ; set absolute positioning
    G0 X125 F6000 ; return to center
    M400 ; Wait for move to finish
  {% endif %}
  {% if not rawparams or 'Z' in rawparams %}
    {action_respond_info('Homing Z')}
    G90 ; set absolute positioning
    G0 X125 Y125 F6000 ; return to center, please add your offsets manually if you want to
    G28 Z
    #G91 ; set relative positioning
    G0 Z10 F1000 ; 10mm zhop before probe
    G0 Z2 F1000
    M400
    PROBE_EDDY_NG_PROBE_STATIC HOME_Z=1
    G0 Z5 F1000 ; 5mm up
    M400 ; Wait for move to finish
  {% endif %}
  G90 ; set absolute positioning
axes: xyz
set_position_z: 0 # This forces the z position to be at 0 when we start homing, so we can move the Z up before homing.

[bed_mesh]
speed: 100 #500
horizontal_move_z: 3
mesh_min: 40,40 # These min/max points are with the above linked Eddy mount on the stock toolhead.
mesh_max: 220,220
probe_count: 15,15 # 25,25 # Set to a lower 15,15 default as it appears a too high probe_count (too dense mesh) is bad with rapid_scan, see: https://www.klipper3d.org/Bed_Mesh.html#rapid-continuous-scanning
algorithm: bicubic
bicubic_tension: 0.5
split_delta_z: 0.0125 # see: https://www.klipper3d.org/Bed_Mesh.html#move-splitting
mesh_pps: 3,3
adaptive_margin: 5
fade_start: 1
fade_end: 10
fade_target: 0
#scan_overshoot: 5  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

